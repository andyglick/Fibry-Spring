task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            group 'eu.lucaventuri'
            artifactId = 'fibry-spring'
            from components.java

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Fibry Spring Starter'
                description = 'Spring Boot integration for Fibry, the first Java Actor System supporting fibers from Project Loom'
                url = 'https://github.com/lucav76/Fibry-Spring'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/lucav76/Fibry-Spring/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'lucav76'
                        name = 'Luca Venturi'
                        email = 'luca@lucaventuri.eu'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/lucav76/Fibry-Spring.git'
                    developerConnection = 'scm:git:ssh://git@github.com:lucav76/Fibry-Spring.git'
                    url = 'https://github.com/lucav76/Fibry-Spring/'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username 'lucav76'
                password System.properties['mavenCentraPassword']
            }
        }
    }
}

// Signing credentials from gradle.properties
signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}